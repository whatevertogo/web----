// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionBankApi.Data;

#nullable disable

namespace QuestionBankApi.Migrations
{
    [DbContext(typeof(QuestionBankDBContext))]
    partial class QuestionBankDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("QuestionBankApi.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Analysis")
                        .HasColumnType("longtext");

                    b.Property<string>("AnswersJson")
                        .HasColumnType("longtext");

                    b.Property<string>("Category")
                        .HasColumnType("longtext");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("ExamplesJson")
                        .HasColumnType("longtext");

                    b.Property<string>("OptionsJson")
                        .HasColumnType("longtext");

                    b.Property<string>("ReferenceAnswer")
                        .HasColumnType("longtext");

                    b.Property<string>("TagsJson")
                        .HasColumnType("longtext");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Analysis = "中国的首都是北京。",
                            AnswersJson = "[\"北京\"]",
                            Content = "中国的首都是哪里？",
                            CreateTime = new DateTime(2025, 4, 10, 21, 51, 11, 740, DateTimeKind.Local).AddTicks(2201),
                            Difficulty = 1,
                            OptionsJson = "[\"北京\", \"上海\", \"广州\", \"深圳\"]",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Analysis = "太阳是一颗恒星。",
                            AnswersJson = "[\"正确\"]",
                            Content = "太阳是恒星。",
                            CreateTime = new DateTime(2025, 4, 10, 21, 51, 11, 740, DateTimeKind.Local).AddTicks(2213),
                            Difficulty = 1,
                            Type = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
